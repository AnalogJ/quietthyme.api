# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    v1.docs.serverless.com
#
# Happy Coding!

service: quietthyme-api # NOTE: update this with your service name

provider:
  name: aws
  stage: dev
  region: us-east-1
  timeout: 20 # optional, default is 6
  runtime: nodejs4.3
  memorySize: 128

custom:
  writeEnvVars:
    DOMAIN: api.quietthyme.com
    ENCRYPTION_PASSPHRASE: ${env:ENCRYPTION_PASSPHRASE}
    ENCRYPTION_PASSPHRENCRYPTION_JWT_PASSPHRASEASE: ${env:ENCRYPTION_JWT_PASSPHRASE}
    DEPLOY_SHA: ${env.CIRCLE_SHA1}
    OAUTH_BOX_CLIENT_KEY: ${env.OAUTH_BOX_CLIENT_KEY}
    OAUTH_BOX_CLIENT_SECRET: ${env.OAUTH_BOX_CLIENT_SECRET}
    OAUTH_DROPBOX_CLIENT_KEY: ${env.OAUTH_DROPBOX_CLIENT_KEY}
    OAUTH_DROPBOX_CLIENT_SECRET: ${env.OAUTH_DROPBOX_CLIENT_SECRET}
    OAUTH_GOOGLE_CLIENT_KEY: ${env.OAUTH_GOOGLE_CLIENT_KEY}
    OAUTH_GOOGLE_CLIENT_SECRET: ${env.OAUTH_GOOGLE_CLIENT_SECRET}
    OAUTH_SKYDRIVE_CLIENT_KEY: ${env.OAUTH_SKYDRIVE_CLIENT_KEY}
    OAUTH_SKYDRIVE_CLIENT_SECRET: ${env.OAUTH_SKYDRIVE_CLIENT_SECRET}
    PG_CONNECTION_STRING: ${env.PG_CONNECTION_STRING}


# you can add packaging information here
package:
  # only the following paths will be included in the resulting artifact which will be uploaded. Without specific include everything in the current folder will be included
  include:
    - lib
    - functions
  # The following paths will be excluded from the resulting artifact. If both include and exclude are defined we first apply the include, then the exclude so files are guaranteed to be excluded
  exclude:
    - tmp
    - .git

functions:
  test:
    handler: handler.test
    events:
      - http: GET test

# OAUTH connect & callback endpoints

  connect:
    handler: handler.link_connect
    events:
      - http: GET connect/{serviceType}
  callback:
    handler: handler.link_callback
    events:
      - http: GET callback/{serviceType}
      - http: POST callback/{serviceType}

# Authenticated API Methods
  user:
    handler: handler.user_info
    events:
      - http: GET user

  bookcreate:
    handler: handler.book_create
    events:
      - http: POST book

  bookfind:
    handler: handler.book_find
    events:
      - http: GET book

  bookdestroy:
    handler: handler.book_destroy
    events:
      - http: DELETE book/{id}

  storagestatus:
    handler: handler.storage_status
    events:
      - http: GET storage/status

  storageupload:
    handler: handler.storage_upload
    events:
      - http: POST storage/upload

  storagethumbupload:
    handler: handler.storage_thumb_upload
    events:
      - http: POST storage/thumb/upload

  storagelink:
    handler: handler.storage_link
    events:
      - http: GET storage/{id}

#   you can add any of the following events
#   events:
#     - http:
#         path: users/create
#         method: get
#     - s3: ${bucket}
#     - schedule: rate(10 minutes)
#     - sns: greeter-topic

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
resources:
  Resources:
    $ref: ./cloudformation-resources.json

plugins:
   - serverless-plugin-write-env-vars